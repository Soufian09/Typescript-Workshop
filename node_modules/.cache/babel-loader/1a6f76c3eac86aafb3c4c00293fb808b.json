{"ast":null,"code":"import _objectSpread from \"/home/mynewuser/react-ts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/mynewuser/react-ts/src/App.tsx\";\nimport React, { Component } from \"react\";\nimport { NewTaskForm } from \"./components/NewTaskForm\";\nimport { TasksList } from \"./components/TaskList\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newTask: {\n        id: 1,\n        name: \"\"\n      },\n      tasks: []\n    };\n\n    this.addTask = event => {\n      event.preventDefault();\n      this.setState(previousState => ({\n        newTask: {\n          id: previousState.newTask.id + 1,\n          name: \"\"\n        },\n        tasks: [...previousState.tasks, previousState.newTask]\n      }));\n    };\n\n    this.handleTaskChange = event => {\n      this.setState({\n        newTask: _objectSpread({}, this.state.newTask, {\n          name: event.target.value\n        })\n      });\n    };\n\n    this.deleteTask = taskToDelete => {\n      this.setState(previousState => ({\n        tasks: [...previousState.tasks.filter(task => task.id !== taskToDelete.id)]\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"ToDolist en React + Typescript\"), React.createElement(NewTaskForm, {\n      task: this.state.newTask,\n      onAdd: this.addTask,\n      onChange: this.handleTaskChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(TasksList, {\n      tasks: this.state.tasks,\n      onDelete: this.deleteTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mynewuser/react-ts/src/App.tsx"],"names":["React","Component","NewTaskForm","TasksList","App","state","newTask","id","name","tasks","addTask","event","preventDefault","setState","previousState","handleTaskChange","target","value","deleteTask","taskToDelete","filter","task","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,SAAT,QAA0B,uBAA1B;;AAMA,MAAMC,GAAN,SAAkBH,SAAlB,CAAuC;AAAA;AAAA;AAAA,SACrCI,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,EAAE,EAAE,CADG;AAEPC,QAAAA,IAAI,EAAE;AAFC,OADH;AAKNC,MAAAA,KAAK,EAAE;AALD,KAD6B;;AAAA,SAuB7BC,OAvB6B,GAuBlBC,KAAD,IAA6C;AAC7DA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKC,QAAL,CAAcC,aAAa,KAAK;AAC9BR,QAAAA,OAAO,EAAE;AACPC,UAAAA,EAAE,EAAEO,aAAa,CAACR,OAAd,CAAsBC,EAAtB,GAA2B,CADxB;AAEPC,UAAAA,IAAI,EAAE;AAFC,SADqB;AAK9BC,QAAAA,KAAK,EAAE,CAAC,GAAGK,aAAa,CAACL,KAAlB,EAAyBK,aAAa,CAACR,OAAvC;AALuB,OAAL,CAA3B;AAOD,KAjCoC;;AAAA,SAmC7BS,gBAnC6B,GAmCTJ,KAAD,IAAgD;AACzE,WAAKE,QAAL,CAAc;AACZP,QAAAA,OAAO,oBACF,KAAKD,KAAL,CAAWC,OADT;AAELE,UAAAA,IAAI,EAAEG,KAAK,CAACK,MAAN,CAAaC;AAFd;AADK,OAAd;AAMD,KA1CoC;;AAAA,SA4C7BC,UA5C6B,GA4CfC,YAAD,IAAwB;AAC3C,WAAKN,QAAL,CAAcC,aAAa,KAAK;AAC9BL,QAAAA,KAAK,EAAE,CACL,GAAGK,aAAa,CAACL,KAAd,CAAoBW,MAApB,CAA2BC,IAAI,IAAIA,IAAI,CAACd,EAAL,KAAYY,YAAY,CAACZ,EAA5D,CADE;AADuB,OAAL,CAA3B;AAKD,KAlDoC;AAAA;;AASrCe,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAEE,oBAAC,WAAD;AACE,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWC,OADnB;AAEE,MAAA,KAAK,EAAE,KAAKI,OAFd;AAGE,MAAA,QAAQ,EAAE,KAAKK,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWI,KAA7B;AAAoC,MAAA,QAAQ,EAAE,KAAKS,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD;;AArBoC;;AAqDvC,eAAed,GAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Task } from \"../models/task\";\nimport { NewTaskForm } from \"./components/NewTaskForm\";\nimport { TasksList } from \"./components/TaskList\";\n\ninterface State {\n  newTask: Task;\n  tasks: Task[];\n}\nclass App extends Component<{}, State> {\n  state = {\n    newTask: {\n      id: 1,\n      name: \"\"\n    },\n    tasks: []\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>ToDolist en React + Typescript</h2>\n        <NewTaskForm\n          task={this.state.newTask}\n          onAdd={this.addTask}\n          onChange={this.handleTaskChange}\n        />\n        <TasksList tasks={this.state.tasks} onDelete={this.deleteTask} />\n      </div>\n    );\n  }\n\n  private addTask = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.setState(previousState => ({\n      newTask: {\n        id: previousState.newTask.id + 1,\n        name: \"\"\n      },\n      tasks: [...previousState.tasks, previousState.newTask]\n    }));\n  };\n\n  private handleTaskChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      newTask: {\n        ...this.state.newTask,\n        name: event.target.value\n      }\n    });\n  };\n\n  private deleteTask = (taskToDelete: Task) => {\n    this.setState(previousState => ({\n      tasks: [\n        ...previousState.tasks.filter(task => task.id !== taskToDelete.id)\n      ]\n    }));\n  };\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}